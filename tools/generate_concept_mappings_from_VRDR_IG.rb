# This script takes the concept map JSON files that are generated as part of the VRDR IG and creates an output
# file with mapping dictionaries used for IJE <-> FHIR value set translation
#
# Usage: ruby tools/generate_concept_mappings_from_VRDR_IG.rb <path-to-concept-maps> > VRDR/Mappings.cs
#
# If you need to generate the concept map JSON files, first install sushi (https://github.com/FHIR/sushi) then
#
#     git clone https://github.com/HL7/vrdr.git
#     cd vrdr
#     sushi
#
# The concept maps JSON files will be built in vrdr/fsh-generated/resources/

require 'json'
require 'erb'

path_to_concept_maps = ARGV.shift
raise "Please provide a path to concept maps as the first argument" unless path_to_concept_maps

# Load the Concept Maps from the provided directory
concept_map_files = Dir.glob("#{path_to_concept_maps}/**/ConceptMap*.json")
raise "No Concept Maps Found" unless concept_map_files.size > 0

# Iterate through each file and populate a hash of <ConceptName> => Array of { ije: <IJECode>, fhir: <FHIRCode> }
concept_map_hash = Hash.new { |h, k| h[k] = [] }
concept_maps = concept_map_files.each do |concept_map_file|

  # Load and parse the JSON
  concept_map = JSON.parse(File.read(concept_map_file))

  # Grab the name, removing the trailing CM string
  name = concept_map['id'].gsub(/CM$/, '')

  # Transform each map into a simpler representation of pairs of values
  concept_map['group'].each do |cmg|
    cmg['element'].each do |cme|
      ije_code = cme['code']
      fhir_code = cme['target'].first['code']
      next unless ije_code && fhir_code # Skip any that don't have both mappings
      concept_map_hash[name] << { ije: ije_code, fhir: fhir_code }
    end
  end
end

# Create a template for the output file

template = <<-EOT
// DO NOT EDIT MANUALLY! This file was generated by the script "<%= scriptname %>"
// You will need to cleanup two minor issues.  Delete all maps for values that are not SNOMEDCT values in:
// 1) TransportationIncidentRoleVS (3 value pairs remain)
// 2) CertifierTypeVS (3 value pairs remain)
//
using System;
using System.Collections.Generic;

namespace VRDR
{
    /// <summary>Mappings between IJE and FHIR value sets</summary>
    public static class Mappings
    {
<% concept_map_hash.each do |concept, mappings| -%>
        /// <summary>Mappings for <%= concept %></summary>
        public static class <%= concept %>
        {
            /// <summary>IJE -> FHIR Mapping for <%= concept %></summary>
            public readonly static Dictionary<string, string> IJEToFHIR = new Dictionary<string, string>
            {
<% mappings.each do |mapping| -%>
                { "<%= mapping[:ije] %>", "<%= mapping[:fhir] %>" },
<% end -%>
            };
            /// <summary>FHIR -> IJE Mapping for <%= concept %></summary>
            public readonly static Dictionary<string, string> FHIRToIJE = new Dictionary<string, string>
            {
<% mappings.each do |mapping| -%>
                { "<%= mapping[:fhir] %>", "<%= mapping[:ije] %>" },
<% end -%>
            };
        }
<% end -%>
    }
}
EOT

# Set up other variables that are used in the template above
scriptname = __FILE__

# Populate and print the template
puts ERB.new(template, nil, '-').result(binding)
